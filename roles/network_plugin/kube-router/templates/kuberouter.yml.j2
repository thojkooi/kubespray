---
apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: kube-router-cfg
    namespace: kube-system
    labels:
      tier: node
      k8s-app: kube-router
  data:
    kubeconfig: |
      apiVersion: v1
      kind: Config
      clusterCIDR: "192.168.0.0/16"
      clusters:
      - name: cluster
        cluster:
          certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          server: https://10.233.0.1:443
      users:
      - name: kube-router
        user:
          tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      contexts:
      - context:
          cluster: cluster
          user: kube-router
        name: kube-router-context
      current-context: kube-router-context

- apiVersion: extensions/v1beta1
  kind: DaemonSet
  metadata:
    labels:
      k8s-app: kube-router
      tier: node
    name: kube-router
    namespace: kube-system
  spec:
    template:
      metadata:
        labels:
          k8s-app: kube-router
          tier: node
        annotations:
          scheduler.alpha.kubernetes.io/critical-pod: ''
      spec:
        serviceAccountName: kube-router
        containers:
        - name: kube-router
          image: cloudnativelabs/kube-router
          imagePullPolicy: Always
          args:
          - "--run-router=true"
          - "--run-firewall=true"
          - "--run-service-proxy=true"
          - "--kubeconfig=/etc/kube-router/kubeconfig"
          - "--hairpin-mode=true"
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          # Broken in this release - will work once the next release is out
          # livenessProbe:
          #   httpGet:
          #     path: /healthz
          #     port: 20244
          #   initialDelaySeconds: 10
          #   periodSeconds: 3
          # resources:
          #   requests:
          #     cpu: 250m
          #     memory: 250Mi
          securityContext:
            privileged: true
          volumeMounts:
          - name: lib-modules
            mountPath: /lib/modules
            readOnly: true
          - name: cni-conf-dir
            mountPath: /etc/cni/net.d
          - name: lib-kube-router
            mountPath: /var/lib/kube-router
            readOnly: true
          - mountPath: /etc/kube-router
            name: kube-router-cfg        
        hostNetwork: true
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: cni-conf-dir
          hostPath:
            path: /etc/cni/net.d
        - name: kube-router-cfg
          configMap:
            name: kube-router-cfg
        - name: lib-kube-router
          hostPath:
            path: /var/lib/kube-router

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: kube-router
    namespace: kube-system

- kind: ClusterRole
  apiVersion: rbac.authorization.k8s.io/v1beta1
  metadata:
    name: kube-router
    namespace: kube-system
  rules:
    - apiGroups:
      - ""
      resources:
        - namespaces
        - pods
        - services
        - nodes
        - endpoints
      verbs:
        - list
        - get
        - watch
    - apiGroups:
      - "networking.k8s.io"
      resources:
        - networkpolicies
      verbs:
        - list
        - get
        - watch
    - apiGroups:
      - extensions
      resources:
        - networkpolicies
      verbs:
        - get
        - list
        - watch

- kind: ClusterRoleBinding
  apiVersion: rbac.authorization.k8s.io/v1beta1
  metadata:
    name: kube-router
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kube-router
  subjects:
  - kind: ServiceAccount
    name: kube-router
    namespace: kube-system
